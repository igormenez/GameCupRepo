{"ast":null,"code":"var _jsxFileName = \"/Users/igormenezes/Documents/GitHub/teste_lambda/Frontend/GameCupFront/src/ui/components/ChooseGame/ChooseGame.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport * as repository from '../../../data/repositories/games_repositories';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport { useSelector, useDispatch } from 'react-redux';\nimport \"./ChooseGame.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ChooseGame() {\n  _s();\n\n  let [games, setGames] = useState();\n  let [selectedGames, setSelectedGames] = useState([]);\n  let [errorMessage, setErrorMessage] = useState(undefined);\n  let [keys, setkeys] = useState();\n  const games_redux = useSelector(state => state.games);\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    repository.getGames().then(games => {\n      const groups = games.reduce((groups, item) => {\n        const group = groups[item.ano] || [];\n        group.push(item);\n        groups[item.ano] = group;\n        return groups;\n      }, {});\n      var keys = Object.keys(groups);\n      setkeys(keys);\n      console.log(groups);\n      setGames(groups);\n    }).catch(e => console.log(e));\n  }, []);\n\n  function toggleGame(game_id) {\n    let game = games.find(game => game.id === game_id);\n\n    if (errorMessage != undefined) {\n      setErrorMessage(undefined);\n    }\n\n    if (!selectedGames.includes(game) && selectedGames.length < 8) {\n      setSelectedGames([...selectedGames, game]);\n    } else {\n      setSelectedGames(selectedGames.filter(e => e !== game));\n    }\n  }\n\n  function startCoup() {\n    if (selectedGames.length == 8) {\n      repository.startCoup(selectedGames).then(winnerGames => dispatch({\n        type: \"ADD_WINNERS\",\n        winnerGames: winnerGames\n      })).catch(e => console.log(e));\n    } else {\n      setErrorMessage(\"Selecione 8 jogos!\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"info-games\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [selectedGames.length, \" Games Selecionados\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: errorMessage == undefined ? \"hide-error\" : null,\n          role: \"alert\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"dark\",\n          onClick: () => startCoup(),\n          children: \"Gerar Meu Campeonato\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"games-block align-items-center\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \" container \",\n        children: keys === null || keys === void 0 ? void 0 : keys.forEach(ano => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [console.log(ano), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: ano\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 14\n            }, this), games === null || games === void 0 ? void 0 : games.map(game => {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: game.ano == ano ? /*#__PURE__*/_jsxDEV(Card, {\n                  style: {\n                    width: '18rem'\n                  },\n                  id: \"cards\",\n                  className: selectedGames.includes(game) ? \"card-game\" : null,\n                  onClick: () => toggleGame(game.id),\n                  children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-check\",\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        className: \"form-check-input\",\n                        type: \"checkbox\",\n                        checked: selectedGames.includes(game) ? true : false,\n                        readOnly: true,\n                        id: \"flexCheckDefault\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 90,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 89,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n                      children: game.titulo\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 92,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n                      className: \"mb-2 text-muted\",\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: game.urlImagem,\n                        className: \"img-thumbnail\",\n                        alt: game.titulo\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 93,\n                        columnNumber: 74\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 93,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(Card.Text, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 94,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 27\n                  }, this)\n                }, game.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 25\n                }, this) : null\n              }, void 0, false);\n            })]\n          }, void 0, true);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChooseGame, \"2KkQXjEaaxQX0iT9W3wXI+zk1GI=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ChooseGame;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChooseGame\");","map":{"version":3,"sources":["/Users/igormenezes/Documents/GitHub/teste_lambda/Frontend/GameCupFront/src/ui/components/ChooseGame/ChooseGame.js"],"names":["React","useState","repository","Container","Row","Card","Button","Col","useSelector","useDispatch","ChooseGame","games","setGames","selectedGames","setSelectedGames","errorMessage","setErrorMessage","undefined","keys","setkeys","games_redux","state","dispatch","useEffect","getGames","then","groups","reduce","item","group","ano","push","Object","console","log","catch","e","toggleGame","game_id","game","find","id","includes","length","filter","startCoup","winnerGames","type","forEach","map","width","titulo","urlImagem"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport * as repository from '../../../data/repositories/games_repositories'\nimport  Container from 'react-bootstrap/Container'\nimport  Row from 'react-bootstrap/Row'\nimport  Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport Col from 'react-bootstrap/Col'\nimport { useSelector, useDispatch } from 'react-redux'\nimport \"./ChooseGame.css\"\n\nexport default function ChooseGame () {\n  let [games, setGames] = useState();\n  let [selectedGames, setSelectedGames] = useState([]);\n  let [errorMessage, setErrorMessage] = useState(undefined);\n  let [keys, setkeys] = useState();\n  \n  const games_redux = useSelector(state => state.games)\n  const dispatch = useDispatch()\n\n  React.useEffect(() => {\n    repository.getGames()\n      .then(games => {\n        const groups = games.reduce((groups, item) => {\n          const group = ( groups[item.ano] || []);\n          group.push(item);\n          groups[item.ano] = group;\n          return groups;\n        }, {});\n      \n        var keys = Object.keys(groups);\n      \n        setkeys(keys)\n        console.log(groups)\n        setGames(groups)\n      })\n      .catch((e) => console.log(e))\n    }, [])\n\n\n    function toggleGame(game_id) {\n      let game = games.find(game => game.id === game_id)\n\n      if (errorMessage != undefined){\n        setErrorMessage(undefined)\n      }\n      if(!selectedGames.includes(game) && selectedGames.length < 8 ){\n        setSelectedGames([...selectedGames,game])\n      }else{\n        setSelectedGames(selectedGames.filter((e)=>(e !== game)))\n      }\n    }\n\n    function startCoup(){\n      if(selectedGames.length == 8 ){\n        repository.startCoup(selectedGames).then(winnerGames => \n        dispatch({ type: \"ADD_WINNERS\", winnerGames: winnerGames})).catch((e) => console.log(e))\n      }else{\n        setErrorMessage(\"Selecione 8 jogos!\")\n      }\n    }\n  return (\n    <Container>\n      <Row className={\"info-games\"}>\n        <Col md={4}>\n          <h3>{selectedGames.length} Games Selecionados</h3>\n        </Col>\n        <Col md={4}>\n          <div id={errorMessage == undefined ? \"hide-error\" : null } role=\"alert\">\n            {errorMessage}\n          </div>\n        </Col>\n        <Col md={4}>\n          <Button variant=\"dark\" onClick={() => startCoup()}>Gerar Meu Campeonato</Button>\n        </Col>\n      </Row>\n      <Container className=\"games-block align-items-center\">\n        <Row className={\" container \"}>\n         {keys?.forEach(ano => {\n           return (\n             <>\n             {console.log(ano)}\n             <h1>{ano}</h1>\n              {games?.map(game => {\n                return(\n                  <>\n                    {game.ano == ano ? (\n                        <Card style={{ width: '18rem' }} id=\"cards\" className={ selectedGames.includes(game)? \"card-game\" : null} key={game.id} onClick={()=> toggleGame(game.id)} >\n                          <Card.Body >\n                            <div className=\"form-check\">\n                              <input className=\"form-check-input\" type=\"checkbox\" checked={selectedGames.includes(game)? true : false } readOnly id=\"flexCheckDefault\"></input>\n                            </div>\n                            <Card.Title>{game.titulo}</Card.Title>\n                              <Card.Subtitle className=\"mb-2 text-muted\"><img src={game.urlImagem} className=\"img-thumbnail\" alt={game.titulo}></img></Card.Subtitle>\n                            <Card.Text>\n                            </Card.Text>\n                          </Card.Body>\n                        </Card>\n                )\n              : null\n          }\n          </>\n          )})}\n             </>\n           )\n           })}\n       </Row>\n      </Container>\n    </Container>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}